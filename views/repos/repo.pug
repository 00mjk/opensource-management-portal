//-
//- Copyright (c) Microsoft. All rights reserved.
//- Licensed under the MIT license. See LICENSE file in the project root for full license information.
//-

extends ../layout

mixin simplePersonView(account)
  - var shorthandName = account.login
  div.horizontal-space-right.vertical-space.pull-left(style='width:36px;height:36px;display:block;vertical-align:middle')
    if account.avatar_url
      img(src=account.avatar_url + '&s=96', style='width:36px;height:36px', title='Avatar of ' + shorthandName)
  div(style='display:block;vertical-align:middle')
    h4
      a(href='/people?q=' + account.login)= shorthandName
    //-ul.list-inline
      if shorthandName && shorthandName !== account.login
        li
          span(title=account.login + ' is the GitHub username for ' + shorthandName)= account.login
      if corporateIdentity
        if link && !corporate
          li.text-warning!= octicon('link', 16)
          li
            span(title=link.aadoid)= link.aadupn
        else
          li!= octicon('link', 16)
          li
            span(title=corporateIdentity + ' is the corporate identity for ' + shorthandName)= corporateIdentity
        //- just corporate e-mails here, not user emails
        if email
          li
            a(href='mailto:' + email, title='Send corporate email to ' + email)
              != octicon('mail', 16)
      if serviceAccount
        li!= octicon('hubot', 16)
        li Service account

mixin teamsList(teams, hideJoinOption)
  if teams && teams.length > 0
    table(style='width:100%')
      tbody
        each permission in teams
          - var team = permission.team
          tr
            td
              ul.list-inline
                - var isMember = teamSets && teamSets.member.has(team.id)
                //- formerly: permission.relativeJoinLink
                if hideJoinOption
                  li
                    ul.list-unstyled
                      li: strong= team.name
                      li: p= team.description
                else
                  li
                    a.btn.btn-sm.btn-muted-more(href=permission.relativePortalLink, title=team.description)= team.name
                if teamSets && teamSets.maintained.has(team.id)
                  li.text-primary You're a maintainer
                else if teamSets && teamSets.member.has(team.id)
                  li.text-primary You're a member
              if team.description && !hideJoinOption
                p= team.description
  else
    p No teams with this permission.

block content

  //- Services
  - var languageColor = viewServices.languageColor
  - var octicon = viewServices.octicon
  - var fileSize = viewServices.fileSize

  //- View constants
  - var maxReaders = 10

  //- Variables
  - var githubUrl = 'https://github.com/' + repo.full_name
  - var cloneUrl = repo.clone_url || repo.otherFields.clone_url
  - var sshUrl = repo.ssh_url || repo.otherFields.ssh_url
  - var admin = repoPermissions && repoPermissions.allowAdministration

  .container
    .row: .col-md-12
        if fromReposPage
          .nav
            ul.pager.zero-pad-bottom
              li.previous
                a(href='javascript:window.history.back()')
                  span(aria-hidden=true) &larr;
                  = ' Back'
        - var hugeHeading = repo.name.length < 33
        h1(class={huge: hugeHeading})
          a(href='https://github.com/' + repo.full_name, target="_blank")= repo.name
          if repo.private === true
            | &nbsp;
            .label.label-warning(class={shrink66: !hugeHeading, shrink50: hugeHeading}) Private
        h6= repo.full_name.replace('/' + repo.name, '') + ' organization'
        if repo.description
          p.lead=repo.description

    include ./pills

    .row
      .col-md-8

        small
          ul.list-inline.list-horizontal-space
            //- NOTES:
            //- * Can minimize some; 10,827 becomes 10.8k, for example

            if repo.language
              li
                span(style={color: languageColor(repo.language)})
                  != octicon('primitive-dot', 10)
                = ' ' + repo.language
            if repo.license && repo.license.featured && repo.license.name
              li
                != octicon('law', 15)
                = ' ' + repo.license.name
            if repo.stargazers_count
              li
                != octicon('star', 15)
                = ' ' + repo.stargazers_count.toLocaleString()
            if repo.forks_count
              li
                != octicon('repo-forked', 12)
                = ' ' + repo.forks_count.toLocaleString()
            if repo.size
              li
                != octicon('database', 13)
                = ' ' + fileSize(repo.size * 1024)

        ul.list-inline(style='margin-top:24px;margin-bottom:48px')
          li: a.btn.btn-sm.btn-muted-more(href=githubUrl, target="_blank", title='View ' + repo.full_name + ' on GitHub.com')
            = 'Open on GitHub.com '
            != octicon('mark-github', 18)
          if cloneUrl
            li: a.btn.btn-sm.btn-muted-more(href='https://github.com/' + repo.full_name, target="_blank") HTTPS clone
          if sshUrl
            li: a.btn.btn-sm.btn-muted-more(href='https://github.com/' + repo.full_name, target="_blank") SSH clone
          if repo.homepage
            li: a.btn.btn-sm.btn-muted-more(href=repo.homepage, target='_new', title=repo.homepage) Homepage

        if repo.moment
          //-h2 Timeline
          ul.list-inline.list-horizontal-space
            if repo.moment.pushed_at
              li
                | Commits pushed
                br
                strong= repo.moment.pushed_at
            if repo.moment.updated_at
              li
                | Updated
                br
                strong= repo.moment.updated_at
            if repo.moment.created_at
              li
                | Created
                br
                strong= repo.moment.created_at

      .col-md-4
        if admin
          h3 Repository management

          ul.list-unstyled.list-vspace
            li
              a.btn.btn-sm(
                class=repoPermissions.admin ? 'btn-primary' : 'btn-muted-more',
                href=githubUrl,
                target="_blank",
                title='View ' + repo.full_name + ' on GitHub.com')
                = 'Manage on GitHub.com '
                != octicon('mark-github', 18)
            if !repoPermissions.admin
              li: p.
                You are not a GitHub repo administrator for this repo and may not be able to manage all settings directly on GitHub.
            li: a.btn.btn-sm.btn-muted-more(
              href='https://github.com/' + repo.full_name + '/settings',
              target='_blank'
            ) GitHub Settings
            li: a.btn.btn-sm.btn-muted-more(
              href='https://github.com/' + repo.full_name + '/settings/collaboration',
              target='_blank'
            ) Outside collaborators
            li: a.btn.btn-sm.btn-muted-more(
              href='https://github.com/' + repo.full_name + '/settings/collaboration',
              target='_blank'
            ) Team permissions
            li: a.btn.btn-sm.btn-muted-more(
              href='https://github.com/' + repo.full_name + '/settings/hooks',
              target='_blank'
            ) Webhooks

            if repoPermissions.allowAdministration && repo.private === true
              ul.list-unstyled.list-vspace
                li
                  form(method='post')
                    input.btn.btn-sm(
                      type='submit',
                      name='make-repo-public'
                      class='btn-danger',
                      value='Make repo public',
                      onclick='return confirm(\'Are you sure that you want to make this repo public?\');'
                      title='Click to toggle this repo from private to public')

    if repositoryMetadataEntity && repositoryMetadataEntity.repositoryName && repositoryMetadataEntity.organizationName
      #corporateMetadata
        hr
        h3 Corporate metadata
        .row
          if repositoryMetadataEntity.releaseReviewType || repositoryMetadataEntity.releaseReviewUrl || repositoryMetadataEntity.projectType
          .col-md-4
            if repositoryMetadataEntity.releaseReviewType
              p
                | Release review type
                br
                if repositoryMetadataEntity.releaseReviewType == 'SmallLibrariesToolsSamples'
                  strong Small Code Exception
                  //- TODO: provide a link to policy
                else
                  strong= repositoryMetadataEntity.releaseReviewType
            if repositoryMetadataEntity.releaseReviewJustification
              p
                | Justification provided
                br
                strong= repositoryMetadataEntity.releaseReviewJustification
            if repositoryMetadataEntity.releaseReviewUrl
              p
                | Release approval work item
                br
                strong: a(href=repositoryMetadataEntity.releaseReviewUrl, target='_new')= repositoryMetadataEntity.releaseReviewUrl
            if repositoryMetadataEntity.projectType
              p
                | Release project type
                br
                strong= repositoryMetadataEntity.projectType
          if repositoryMetadataEntity.initialRepositoryDescription
            .col-md-4
              if repositoryMetadataEntity.initialRepositoryDescription
                p
                  | Description
                  br
                  strong= repositoryMetadataEntity.initialRepositoryDescription
          if repositoryMetadataEntity.createdByThirdPartyUsername
            .col-md-4
              if repositoryMetadataEntity.createdByThirdPartyUsername
                p
                  | Repository created by
                  br
                  strong= repositoryMetadataEntity.createdByThirdPartyUsername
        //-.row
          .col-md-12
            pre= JSON.stringify(repositoryMetadataEntity, undefined, 2)

    if config && config.microsoftOpenSource && config.microsoftOpenSource.githubInsights
      h4 Metrics
      p.
        Explore GitHub data, gain insights, build your community by learning to
        query the
        #[a(href=config.microsoftOpenSource.githubInsights, target='_new') GitHub Insights]
        data provided ghcrawler and CloudMine.
        #[a(href=config.microsoftOpenSource.githubInsights, target='_new') Learn more...]

    if reposDataAgeInformation
      p.text-primary(style='margin-bottom:24px')
        if reposDataAgeInformation.changed
          = 'Updated ' + reposDataAgeInformation.changed
        if reposDataAgeInformation.updated && reposDataAgeInformation.changed
          |, refreshed
        else
          | Refreshed
        if reposDataAgeInformation.updated
          = ' ' + reposDataAgeInformation.updated
